@model IEnumerable<Gestion_Etudiants.Models.Student>

@{
    ViewData["Title"] = "Liste des Étudiants";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="Create" class="btn btn-success" title="Ajouter un nouvel étudiant">
        <i class="fas fa-plus me-2"></i>Nouvel Étudiant
    </a>
</div>

<div class="card mb-4 shadow">
    <div class="card-header bg-light">
        <h5 class="mb-0"><i class="fas fa-search me-2"></i>Recherche</h5>
    </div>
    <div class="card-body">
        <form class="row g-3" asp-action="Index" method="get">
            <div class="col-md-5">
                <input class="form-control" placeholder="Nom de l'étudiant"
                       type="search" name="name" value="@Context.Request.Query["name"]" />
            </div>
            <div class="col-md-5">
                <select class="form-select" asp-items="ViewBag.SchoolList" name="schoolid">
                    <option value="">Toutes les écoles</option>
                </select>
            </div>
            <div class="col-md-2">
                <button class="btn btn-primary w-100" type="submit" title="Rechercher">
                    <i class="fas fa-search me-2"></i>Rechercher
                </button>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.StudentName)</th>
                <th>@Html.DisplayNameFor(model => model.Age)</th>
                <th>@Html.DisplayNameFor(model => model.BirthDate)</th>
                <th>@Html.DisplayNameFor(model => model.School)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.StudentName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Age)</td>
                    <td>@item.BirthDate.ToString("dd/MM/yyyy")</td>
                    <td>@Html.DisplayFor(modelItem => item.School.SchoolName)</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.StudentId"
                               class="btn btn-sm btn-warning" title="Modifier">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.StudentId"
                               class="btn btn-sm btn-info" title="Détails">
                                <i class="fas fa-info-circle"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.StudentId"
                               class="btn btn-sm btn-danger" title="Supprimer">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@* Pagination *@
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, name = Context.Request.Query["name"], schoolid = Context.Request.Query["schoolid"] })">@i</a>
                </li>
            }
        </ul>
    </nav>
}