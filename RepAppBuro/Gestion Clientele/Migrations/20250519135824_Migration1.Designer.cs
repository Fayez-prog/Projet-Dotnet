// <auto-generated />
using System;
using Gestion_Clientele.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_Clientele.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250519135824_Migration1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gestion_Clientele.Models.Appareil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("NumeroSerie")
                        .IsUnique();

                    b.ToTable("Appareils");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NumTel")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.DemandeReparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppareilId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDepotAppareil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePrevueRep")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SymptomesPanne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppareilId");

                    b.HasIndex("ClientId");

                    b.ToTable("DemandesReparation");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ReparationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.HasIndex("ReparationId")
                        .IsUnique();

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.PieceRecharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrixAChat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("TypePieceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypePieceId");

                    b.ToTable("PiecesRecharge");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Reparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRep")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemandeReparationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TarifMO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempsMO")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DemandeReparationId");

                    b.ToTable("Reparations");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.TypePiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Tarif")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePieces");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Appareil", b =>
                {
                    b.HasOne("Gestion_Clientele.Models.Client", "Client")
                        .WithMany("Appareils")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.DemandeReparation", b =>
                {
                    b.HasOne("Gestion_Clientele.Models.Appareil", "Appareil")
                        .WithMany("DemandesReparation")
                        .HasForeignKey("AppareilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestion_Clientele.Models.Client", "Client")
                        .WithMany("DemandesReparation")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appareil");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Facture", b =>
                {
                    b.HasOne("Gestion_Clientele.Models.Reparation", "Reparation")
                        .WithOne("Facture")
                        .HasForeignKey("Gestion_Clientele.Models.Facture", "ReparationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reparation");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.PieceRecharge", b =>
                {
                    b.HasOne("Gestion_Clientele.Models.TypePiece", "TypePiece")
                        .WithMany("PiecesRecharge")
                        .HasForeignKey("TypePieceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TypePiece");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Reparation", b =>
                {
                    b.HasOne("Gestion_Clientele.Models.DemandeReparation", "DemandeReparation")
                        .WithMany("Reparations")
                        .HasForeignKey("DemandeReparationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DemandeReparation");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Appareil", b =>
                {
                    b.Navigation("DemandesReparation");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Client", b =>
                {
                    b.Navigation("Appareils");

                    b.Navigation("DemandesReparation");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.DemandeReparation", b =>
                {
                    b.Navigation("Reparations");
                });

            modelBuilder.Entity("Gestion_Clientele.Models.Reparation", b =>
                {
                    b.Navigation("Facture")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_Clientele.Models.TypePiece", b =>
                {
                    b.Navigation("PiecesRecharge");
                });
#pragma warning restore 612, 618
        }
    }
}
