@model Gestion_Medicament.Models.Medicament
@using Gestion_Medicament.Entity.Interface
@inject IUnitOfWork _unitOfWork

@{
    ViewData["Title"] = $"Détails - {Model.Reference}";
    var lignesLivraison = await _unitOfWork.LigneLivraisons.GetLignesByMedicamentAsync(Model.Reference);
    var totalLivree = await _unitOfWork.LigneLivraisons.GetTotalQuantiteLivreeAsync(Model.Reference);
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
        <i class="fas fa-pills"></i> @Model.Description
        <small class="text-muted">@Model.Reference</small>
    </h1>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Reference" class="btn btn-primary">
            <i class="fas fa-edit"></i> Modifier
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Retour
        </a>
    </div>
</div>

<div class="row">
    <!-- Carte d'information principale -->
    <div class="col-md-6">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-info-circle"></i> Informations de base
                </h5>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-6">
                        <h6 class="text-muted">Référence</h6>
                        <p class="font-weight-bold">@Model.Reference</p>
                    </div>
                    <div class="col-6">
                        <h6 class="text-muted">Description</h6>
                        <p class="font-weight-bold">@Model.Description</p>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-6">
                        <h6 class="text-muted">Quantité en stock</h6>
                        <p class="@(Model.Quantite < 10 ? "text-danger font-weight-bold" : "font-weight-bold")">
                            @Model.Quantite unités
                        </p>
                    </div>
                    <div class="col-6">
                        <h6 class="text-muted">Prix unitaire</h6>
                        <p class="font-weight-bold">@Model.Prix.ToString("C2")</p>
                    </div>
                </div>

                <div class="alert alert-info mt-3">
                    <div class="d-flex justify-content-between">
                        <span>Valeur du stock:</span>
                        <strong>@((Model.Quantite * Model.Prix).ToString("C2"))</strong>
                    </div>
                    <div class="d-flex justify-content-between">
                        <span>Total livré:</span>
                        <strong>@totalLivree unités</strong>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistiques -->
    <div class="col-md-6">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">
                    <i class="fas fa-chart-bar"></i> Statistiques
                </h5>
            </div>
            <div class="card-body">
                <canvas id="stockChart" height="200"></canvas>
                <div class="mt-3">
                    <small class="text-muted">
                        Dernière mise à jour: @DateTime.Now.ToString("g")
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Historique des livraisons -->
<div class="card shadow-sm">
    <div class="card-header bg-secondary text-white">
        <h5 class="mb-0">
            <i class="fas fa-truck-loading"></i> Historique des livraisons
        </h5>
    </div>
    <div class="card-body p-0">
        @if (lignesLivraison.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="thead-light">
                        <tr>
                            <th>Date</th>
                            <th>N° Livraison</th>
                            <th>Fournisseur</th>
                            <th>Quantité</th>
                            <th>Prix unitaire</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ligne in lignesLivraison.OrderByDescending(l => l.Livraison.DateLiv))
                        {
                            <tr>
                                <td>@ligne.Livraison.DateLiv.ToString("d")</td>
                                <td>
                                    <a asp-controller="Livraisons" asp-action="Details" asp-route-id="@ligne.Livraison.Numero">
                                        @ligne.Livraison.Numero
                                    </a>
                                </td>
                                <td>@ligne.Livraison.Fournisseur</td>
                                <td>@ligne.Quantite</td>
                                <td>@Model.Prix.ToString("C2")</td>
                                <td>@((ligne.Quantite * Model.Prix).ToString("C2"))</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot class="font-weight-bold">
                        <tr>
                            <td colspan="3">Total</td>
                            <td>@lignesLivraison.Sum(l => l.Quantite)</td>
                            <td></td>
                            <td>@(lignesLivraison.Sum(l => l.Quantite * Model.Prix).ToString("C2"))</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning m-3">
                <i class="fas fa-exclamation-circle"></i> Aucune livraison enregistrée pour ce médicament.
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Graphique des stocks
            var ctx = document.getElementById('stockChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Stock actuel', 'Total livré'],
                    datasets: [{
                        data: [@Model.Quantite, @totalLivree],
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.8)',
                            'rgba(75, 192, 192, 0.8)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.label + ': ' + context.raw + ' unités';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}