@model IEnumerable<Gestion_Medicament.Models.Medicament>

@{
    ViewData["Title"] = "Médicaments en stock faible";
    var seuil = ViewBag.Seuil ?? 10;
}

<div class="card shadow border-warning">
    <div class="card-header bg-warning text-white">
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="mb-0">
                <i class="fas fa-exclamation-triangle"></i> @ViewData["Title"]
            </h2>
            <div>
                <a asp-action="Index" class="btn btn-light">
                    <i class="fas fa-arrow-left"></i> Retour
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-warning mb-4">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="alert-heading"><i class="fas fa-info-circle"></i> Seuil actuel</h5>
                    <p class="mb-0">Affichage des médicaments avec stock inférieur à <strong>@seuil unités</strong></p>
                </div>
                <div class="btn-group">
                    <a href="@Url.Action("LowStock", new { seuil = 5 })" class="btn btn-sm @(seuil == 5 ? "btn-danger" : "btn-outline-danger")">
                        < 5 (Critique)
                    </a>
                    <a href="@Url.Action("LowStock", new { seuil = 10 })" class="btn btn-sm @(seuil == 10 ? "btn-warning" : "btn-outline-warning")">
                        < 10 (Faible)
                    </a>
                    <a href="@Url.Action("LowStock", new { seuil = 15 })" class="btn btn-sm @(seuil == 15 ? "btn-info" : "btn-outline-info")">
                        < 15 (Alerte)
                    </a>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Référence</th>
                        <th>Description</th>
                        <th>Stock</th>
                        <th>Prix unitaire</th>
                        <th>Valeur stock</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var stockClass = item.Quantite < 5 ? "table-danger" : "table-warning";
                        <tr class="@stockClass">
                            <td>@Html.DisplayFor(modelItem => item.Reference)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td class="font-weight-bold">
                                @Html.DisplayFor(modelItem => item.Quantite)
                                @if (item.Quantite < 5)
                                {
                                    <span class="badge badge-danger ml-2">CRITIQUE</span>
                                }
                                else
                                {
                                    <span class="badge badge-warning ml-2">FAIBLE</span>
                                }
                            </td>
                            <td>@item.Prix.ToString("C2")</td>
                            <td>@((item.Quantite * item.Prix).ToString("C2"))</td>
                            <td nowrap>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.Reference" class="btn btn-outline-primary" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Reference" class="btn btn-outline-info" title="Détails">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a asp-action="Create" asp-controller="Livraisons" asp-route-medicamentRef="@item.Reference"
                                       class="btn btn-outline-success" title="Approvisionner">
                                        <i class="fas fa-truck-loading"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (!Model.Any())
        {
            <div class="alert alert-success text-center">
                <i class="fas fa-check-circle fa-2x mb-3"></i>
                <h4>Aucun médicament en stock faible</h4>
                <p class="mb-0">Tous vos médicaments ont un stock supérieur à @seuil unités</p>
            </div>
        }
    </div>
    <div class="card-footer text-muted">
        <div class="d-flex justify-content-between">
            <div>
                Total: <strong>@Model.Count()</strong> médicament(s) en stock faible
            </div>
            <div>
                Valeur totale: <strong>@Model.Sum(m => m.Quantite * m.Prix).ToString("C2")</strong>
            </div>
        </div>
    </div>
</div>